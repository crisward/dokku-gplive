#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
cmd=$3
appname=$4
plugins=$(ls -d $PLUGIN_AVAILABLE_PATH/*/ 2>/dev/null)
# runs ie mariadb:list > /home/dokku/mariadb.list for mariadb:create,destroy etc
# so sync can just read from cache
gplive_dbupdate_cmd() {
  local typ=${1%:*}
  local cmd=$1
  local DOKKU_ROOT=$2
  local plugins=$3
  local appname=$4
  local parent_pid=$5
  local build_process=$(pgrep -f -u "$(whoami)" "dokku $cmd $appname")
  GPCONFIG_DIR="$DOKKU_ROOT/.gitpushcache"
  # checks if plugin exists before running command
  if [[ $plugins =~ "$typ"* ]]; then
    timeout 30s tail --pid=$build_process -f /dev/null # wait for parent process to exit 
    if [ -f "$GPCONFIG_DIR/URLS" ];then
      GITPUSHLIVE_BASE_URL=$(<"$GPCONFIG_DIR/URLS")
    fi
    [ -z "$GITPUSHLIVE_BASE_URL" ] && BASE_URL='https://gitpushlive.com' || BASE_URL=$GITPUSHLIVE_BASE_URL
    BASE_URLS=' ' read -r -a array <<< "$BASE_URL" # convert to array, incase multiple servers
    local container=$(dokku $typ:info $appname --id) # container id
    local status=$(dokku $typ:info $appname --status) # status
    for URL in "${array[@]}"
    do
      curl "$URL/duocms/api/dokku/service" --ipv4 --silent \
        --data "cmd=$cmd" \
        --data "name=$appname" \
        --data "type=$typ" \
        --data "container_id=${container:0:12}" \
        --data "status=$status"  > /dev/null
    done 
  fi
}

# sends cert list to server after each enable / revoke
gplive_leupdate_cmd() {
  local cmd=$1
  local appname=$2
  local DOKKU_ROOT=$3
  local build_process=$(pgrep -f -u "$(whoami)" "dokku $cmd $appname")
  GPCONFIG_DIR="$DOKKU_ROOT/.gitpushcache"
  timeout 30s tail --pid=$build_process -f /dev/null # wait for parent process to exit
  if [ -f "$DOKKU_ROOT/URLS" ];then
    GITPUSHLIVE_BASE_URL=$(<"$GPCONFIG_DIR/URLS")
  fi
  local certs=$(dokku letsencrypt:ls 2> /dev/null || dokku letsencrypt:list)
  [ -z "$GITPUSHLIVE_BASE_URL" ] && BASE_URL='https://gitpushlive.com' || BASE_URL=$GITPUSHLIVE_BASE_URL
  BASE_URLS=' ' read -r -a array <<< "$BASE_URL" # convert to array, incase multiple servers
  for URL in "${array[@]}"
  do
    curl "$URL/duocms/api/dokku/certs" --ipv4 --silent \
      --data "certs=$certs" > /dev/null
  done 
}

# listens to all commands, only triggers for following commands on following db plugins
case $cmd in
  mariadb* | redis* | couchdb* | elasticsearch* | memcached* | mongo* | mysql* | postgres* | rabbitmq* | rethinkdb*)
    if [[ $cmd == *"create" ]] || [[ $cmd == *"destroy" ]] || [[ $cmd == *"link" ]] || [[ $cmd == *"unlink" ]] || [[ $cmd == *"start" ]] || [[ $cmd == *"stop" ]] || [[ $cmd == *"expose" ]] || [[ $cmd == *"unexpose" ]]; then
      gplive_dbupdate_cmd "$cmd" "$DOKKU_ROOT" "$plugins" "$appname" "$PPID" &
    fi
  ;;
  letsencrypt*)
    if [[ $cmd == "letsencrypt" ]] || [[ $cmd == *"revoke" ]] || [[ $cmd == *"enable" ]]; then
      gplive_leupdate_cmd "$cmd" "$appname" "$DOKKU_ROOT" &
    fi
  ;;
esac

# always allows
exit 0